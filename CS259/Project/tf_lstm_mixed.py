import tensorflow as tf
from tensorflow.compat.v1 import ConfigProto
from tensorflow.compat.v1 import InteractiveSession
from datetime import datetime
import numpy as np
import sys
import csv


#USAGE: python tf_lstm.py imp profile outname 
imp = 0
prof = False
outname = "out.csv"
if len(sys.argv) > 1:
	imp = int(sys.argv[1])
	print("IMP", imp)

if len(sys.argv) > 2:
	if(int(sys.argv[2]) == 1):
		prof = True
	print("PROF", prof)

if len(sys.argv) > 3:
	outname = sys.argv[3]
	print("OUTNAME", outname)

csvfile = open(outname, 'w')
writer = csv.writer(csvfile)
writer.writerow(['hidden', 'batch_size', 'timesteps', 'imp', 'fwd_time'])

# logs = "logs/" + "NEW"+ datetime.now().strftime("%Y%m%d-%H%M%S")
# tboard_callback = tf.keras.callbacks.TensorBoard(log_dir = logs)

def execLSTM(hidden, batch_size, timesteps):
	inputs = tf.random.normal([batch_size,timesteps,1], dtype=tf.float32)
	model = tf.keras.Sequential()
	if imp == 0:
		lstm = tf.keras.layers.LSTM(hidden) #add use_base=False for noncudnn accelerated
	else:
		lstm = tf.keras.layers.LSTM(hidden, use_bias=False, implementation=imp)
	model.add(lstm)
	num_repeats = 100

	opt = tf.keras.optimizers.Adam()
	opt = tf.train.experimental.enable_mixed_precision_graph_rewrite(opt)
	model.compile(optimizer=opt)
	#Warmup
	model.predict(inputs)

	paramStr = '_'.join([str(hidden), str(batch_size), str(timesteps), str(imp)])
	logs = "logsfinal/" + paramStr + "_" + datetime.now().strftime("%Y%m%d-%H%M%S")
	tboard_callback = tf.keras.callbacks.TensorBoard(log_dir = logs)
	
	if(prof):
		tf.profiler.experimental.start(logs)
	
	start = datetime.now()
	output = model.predict(inputs, callbacks=[tboard_callback])
	end = datetime.now()
	print("OUT SHAPE", output.shape)
	
	if(prof):
		tf.profiler.experimental.stop()
	elapsed = end - start

	writer.writerow([hidden, batch_size, timesteps, imp, elapsed.microseconds])
	print("{},{},{},{}".format(hidden, batch_size, timesteps, elapsed.microseconds))

def execCudnnLSTM(hidden, batch_size, timesteps):
	start = datetime.now()
	inputs = tf.random.normal([batch_size,timesteps,hidden]) #CudnnLSTM is time major
	cudnnlstm = tf.compat.v1.keras.layers.CuDNNLSTM(1)
	output = cudnnlstm(inputs)
	end = datetime.now()
	elapsed = end - start
	print("OUTPUT SHAPE:",output.shape)
	print("WEIGHT SHAPE:", np.array(cudnnlstm.get_weights()).shape)
	print("{},{},{},{}".format(hidden, batch_size, timesteps, elapsed.microseconds))

def allCudnnLSTM():
	execCudnnLSTM(314, 295, 131)
	execCudnnLSTM(620, 253, 33)
	execCudnnLSTM(593, 240, 630)
	# execCudnnLSTM(270, 128, 801)
	# execCudnnLSTM(523, 240, 94)
	# execCudnnLSTM(130, 53, 787)
	# execCudnnLSTM(1690, 13, 271)
	# execCudnnLSTM(590, 176, 429)
	# execCudnnLSTM(273, 102, 120)
	# execCudnnLSTM(1690, 149, 514)
	# execCudnnLSTM(554, 22, 951)
	# execCudnnLSTM(1643, 271, 415)
	# execCudnnLSTM(678, 173, 268)
	# execCudnnLSTM(1130, 155, 818)
	# execCudnnLSTM(1011, 290, 559)
	# execCudnnLSTM(209, 186, 702)
	# execCudnnLSTM(1296, 73, 115)
	# execCudnnLSTM(948, 195, 940)
	# execCudnnLSTM(439, 260, 14)
	# execCudnnLSTM(1891, 264, 252)
	# execCudnnLSTM(120, 129, 672)
	# execCudnnLSTM(1266, 198, 254)
	# execCudnnLSTM(1074, 10, 535)
	# execCudnnLSTM(115, 295, 842)
	# execCudnnLSTM(833, 154, 663)
	# execCudnnLSTM(953, 209, 613)
	# execCudnnLSTM(449, 235, 885)
	# execCudnnLSTM(614, 285, 98)
	# execCudnnLSTM(56, 212, 51)
	# execCudnnLSTM(554, 205, 510)
	# execCudnnLSTM(1600, 119, 596)
	# execCudnnLSTM(277, 192, 873)
	# execCudnnLSTM(521, 149, 671)
	# execCudnnLSTM(89, 288, 11)
	# execCudnnLSTM(1435, 249, 590)
	# execCudnnLSTM(279, 265, 739)
	# execCudnnLSTM(1686, 296, 505)
	# execCudnnLSTM(308, 261, 798)
	# execCudnnLSTM(280, 51, 984)
	# execCudnnLSTM(1875, 14, 833)
	# execCudnnLSTM(919, 254, 565)
	# execCudnnLSTM(1604, 67, 664)
	# execCudnnLSTM(1524, 138, 80)
	# execCudnnLSTM(1518, 169, 817)
	# execCudnnLSTM(263, 90, 672)
	# execCudnnLSTM(402, 160, 70)
	# execCudnnLSTM(1832, 72, 551)
	# execCudnnLSTM(749, 118, 151)
	# execCudnnLSTM(432, 62, 84)
	# execCudnnLSTM(516, 102, 759)
	# execCudnnLSTM(738, 180, 175)
	# execCudnnLSTM(811, 196, 425)
	# execCudnnLSTM(765, 155, 763)
	# execCudnnLSTM(1169, 106, 501)
	# execCudnnLSTM(1222, 185, 333)
	# execCudnnLSTM(412, 79, 447)
	# execCudnnLSTM(336, 51, 814)
	# execCudnnLSTM(979, 176, 534)
	# execCudnnLSTM(1145, 193, 238)
	# execCudnnLSTM(1085, 85, 780)
	# execCudnnLSTM(1399, 125, 245)
	# execCudnnLSTM(496, 247, 746)
	# execCudnnLSTM(242, 35, 382)
	# execCudnnLSTM(1548, 106, 434)
	# execCudnnLSTM(887, 61, 445)
	# execCudnnLSTM(1553, 204, 144)
	# execCudnnLSTM(1444, 24, 159)
	# execCudnnLSTM(460, 178, 639)
	# execCudnnLSTM(1655, 106, 535)
	# execCudnnLSTM(268, 265, 201)
	# execCudnnLSTM(1196, 10, 30)
	# execCudnnLSTM(345, 29, 920)
	# execCudnnLSTM(1377, 242, 551)
	# execCudnnLSTM(1334, 167, 548)
	# execCudnnLSTM(328, 83, 68)
	# execCudnnLSTM(441, 288, 885)
	# execCudnnLSTM(958, 196, 896)
	# execCudnnLSTM(312, 262, 812)
	# execCudnnLSTM(646, 28, 301)
	# execCudnnLSTM(1395, 207, 870)
	# execCudnnLSTM(1384, 264, 959)
	# execCudnnLSTM(1865, 184, 548)
	# execCudnnLSTM(1399, 57, 419)
	# execCudnnLSTM(1492, 220, 236)
	# execCudnnLSTM(814, 228, 485)
	# execCudnnLSTM(1814, 78, 979)
	# execCudnnLSTM(1287, 17, 953)
	# execCudnnLSTM(1593, 189, 63)
	# execCudnnLSTM(404, 157, 350)
	# execCudnnLSTM(238, 83, 155)
	# execCudnnLSTM(61, 291, 148)
	# execCudnnLSTM(1028, 49, 129)
	# execCudnnLSTM(1759, 130, 533)
	# execCudnnLSTM(1155, 66, 389)
	# execCudnnLSTM(764, 31, 658)
	# execCudnnLSTM(1746, 45, 470)
	# execCudnnLSTM(982, 151, 977)
	# execCudnnLSTM(366, 64, 662)
	# execCudnnLSTM(879, 244, 981)
	# execCudnnLSTM(928, 211, 19)


def allLSTM():
	execLSTM(314, 295, 131)
	execLSTM(620, 253, 33)
	execLSTM(593, 240, 630)
	# execLSTM(270, 128, 801)
	# execLSTM(523, 240, 94)
	# execLSTM(130, 53, 787)
	# execLSTM(1690, 13, 271)
	# execLSTM(590, 176, 429)
	# execLSTM(273, 102, 120)
	# execLSTM(1690, 149, 514)
	# execLSTM(554, 22, 951)
	# execLSTM(1643, 271, 415)
	# execLSTM(678, 173, 268)
	# execLSTM(1130, 155, 818)
	# execLSTM(1011, 290, 559)
	# execLSTM(209, 186, 702)
	# execLSTM(1296, 73, 115)
	# execLSTM(948, 195, 940)
	# execLSTM(439, 260, 14)
	# execLSTM(1891, 264, 252)
	# execLSTM(120, 129, 672)
	# execLSTM(1266, 198, 254)
	# execLSTM(1074, 10, 535)
	# execLSTM(115, 295, 842)
	# execLSTM(833, 154, 663)
	# execLSTM(953, 209, 613)
	# execLSTM(449, 235, 885)
	# execLSTM(614, 285, 98)
	# execLSTM(56, 212, 51)
	# execLSTM(554, 205, 510)
	# execLSTM(1600, 119, 596)
	# execLSTM(277, 192, 873)
	# execLSTM(521, 149, 671)
	# execLSTM(89, 288, 11)
	# execLSTM(1435, 249, 590)
	# execLSTM(279, 265, 739)
	# execLSTM(1686, 296, 505)
	# execLSTM(308, 261, 798)
	# execLSTM(280, 51, 984)
	# execLSTM(1875, 14, 833)
	# execLSTM(919, 254, 565)
	# execLSTM(1604, 67, 664)
	# execLSTM(1524, 138, 80)
	# execLSTM(1518, 169, 817)
	# execLSTM(263, 90, 672)
	# execLSTM(402, 160, 70)
	# execLSTM(1832, 72, 551)
	# execLSTM(749, 118, 151)
	# execLSTM(432, 62, 84)
	# execLSTM(516, 102, 759)
	# execLSTM(738, 180, 175)
	# execLSTM(811, 196, 425)
	# execLSTM(765, 155, 763)
	# execLSTM(1169, 106, 501)
	# execLSTM(1222, 185, 333)
	# execLSTM(412, 79, 447)
	# execLSTM(336, 51, 814)
	# execLSTM(979, 176, 534)
	# execLSTM(1145, 193, 238)
	# execLSTM(1085, 85, 780)
	# execLSTM(1399, 125, 245)
	# execLSTM(496, 247, 746)
	# execLSTM(242, 35, 382)
	# execLSTM(1548, 106, 434)
	# execLSTM(887, 61, 445)
	# execLSTM(1553, 204, 144)
	# execLSTM(1444, 24, 159)
	# execLSTM(460, 178, 639)
	# execLSTM(1655, 106, 535)
	# execLSTM(268, 265, 201)
	# execLSTM(1196, 10, 30)
	# execLSTM(345, 29, 920)
	# execLSTM(1377, 242, 551)
	# execLSTM(1334, 167, 548)
	# execLSTM(328, 83, 68)
	# execLSTM(441, 288, 885)
	# execLSTM(958, 196, 896)
	# execLSTM(312, 262, 812)
	# execLSTM(646, 28, 301)
	# execLSTM(1395, 207, 870)
	# execLSTM(1384, 264, 959)
	# execLSTM(1865, 184, 548)
	# execLSTM(1399, 57, 419)
	# execLSTM(1492, 220, 236)
	# execLSTM(814, 228, 485)
	# execLSTM(1814, 78, 979)
	# execLSTM(1287, 17, 953)
	# execLSTM(1593, 189, 63)
	# execLSTM(404, 157, 350)
	# execLSTM(238, 83, 155)
	# execLSTM(61, 291, 148)
	# execLSTM(1028, 49, 129)
	# execLSTM(1759, 130, 533)
	# execLSTM(1155, 66, 389)
	# execLSTM(764, 31, 658)
	# execLSTM(1746, 45, 470)
	# execLSTM(982, 151, 977)
	# execLSTM(366, 64, 662)
	# execLSTM(879, 244, 981)
	# execLSTM(928, 211, 19)

def allLSTM_nice():
	execLSTM(64, 64, 100)
	# execLSTM(256, 128, 25)
	# execLSTM(512, 256, 250)
	# execLSTM(1024, 4, 100)
	# execLSTM(1024, 128, 100)
	# execLSTM(64, 1, 25)
	# execLSTM(64, 1, 100)
	# execLSTM(64, 1, 250)
	# execLSTM(64, 1, 1000)
	# execLSTM(64, 1, 2500)
	# execLSTM(64, 1, 5000)
	# execLSTM(64, 2, 25)
	# execLSTM(64, 2, 100)
	# execLSTM(64, 2, 250)
	# execLSTM(64, 2, 1000)
	# execLSTM(64, 2, 2500)
	# execLSTM(64, 2, 5000)
	# execLSTM(64, 4, 25)
	# execLSTM(64, 4, 100)
	# execLSTM(64, 4, 250)
	# execLSTM(64, 4, 1000)
	# execLSTM(64, 4, 2500)
	# execLSTM(64, 4, 5000)
	# execLSTM(64, 16, 25)
	# execLSTM(64, 16, 100)
	# execLSTM(64, 16, 250)
	# execLSTM(64, 16, 1000)
	# execLSTM(64, 16, 2500)
	# execLSTM(64, 16, 5000)
	# execLSTM(64, 32, 25)
	# execLSTM(64, 32, 100)
	# execLSTM(64, 32, 250)
	# execLSTM(64, 32, 1000)
	# execLSTM(64, 32, 2500)
	# execLSTM(64, 32, 5000)
	# execLSTM(64, 64, 25)
	# execLSTM(64, 64, 100)
	# execLSTM(64, 64, 250)
	# execLSTM(64, 64, 1000)
	# execLSTM(64, 64, 2500)
	# execLSTM(64, 64, 5000)
	# execLSTM(64, 128, 25)
	# execLSTM(64, 128, 100)
	# execLSTM(64, 128, 250)
	# execLSTM(64, 128, 1000)
	# execLSTM(64, 128, 2500)
	# execLSTM(64, 128, 5000)
	# execLSTM(64, 256, 25)
	# execLSTM(64, 256, 100)
	# execLSTM(64, 256, 250)
	# execLSTM(64, 256, 1000)
	# execLSTM(64, 256, 2500)
	# execLSTM(64, 256, 5000)
	# execLSTM(256, 1, 25)
	# execLSTM(256, 1, 100)
	# execLSTM(256, 1, 250)
	# execLSTM(256, 1, 1000)
	# execLSTM(256, 1, 2500)
	# execLSTM(256, 1, 5000)
	# execLSTM(256, 2, 25)
	# execLSTM(256, 2, 100)
	# execLSTM(256, 2, 250)
	# execLSTM(256, 2, 1000)
	# execLSTM(256, 2, 2500)
	# execLSTM(256, 2, 5000)
	# execLSTM(256, 4, 25)
	# execLSTM(256, 4, 100)
	# execLSTM(256, 4, 250)
	# execLSTM(256, 4, 1000)
	# execLSTM(256, 4, 2500)
	# execLSTM(256, 4, 5000)
	# execLSTM(256, 16, 25)
	# execLSTM(256, 16, 100)
	# execLSTM(256, 16, 250)
	# execLSTM(256, 16, 1000)
	# execLSTM(256, 16, 2500)
	# execLSTM(256, 16, 5000)
	# execLSTM(256, 32, 25)
	# execLSTM(256, 32, 100)
	# execLSTM(256, 32, 250)
	# execLSTM(256, 32, 1000)
	# execLSTM(256, 32, 2500)
	# execLSTM(256, 32, 5000)
	# execLSTM(256, 64, 25)
	# execLSTM(256, 64, 100)
	# execLSTM(256, 64, 250)
	# execLSTM(256, 64, 1000)
	# execLSTM(256, 64, 2500)
	# execLSTM(256, 64, 5000)
	# execLSTM(256, 128, 25)
	# execLSTM(256, 128, 100)
	# execLSTM(256, 128, 250)
	# execLSTM(256, 128, 1000)
	# execLSTM(256, 128, 2500)
	# execLSTM(256, 128, 5000)
	# execLSTM(256, 256, 25)
	# execLSTM(256, 256, 100)
	# execLSTM(256, 256, 250)
	# execLSTM(256, 256, 1000)
	# execLSTM(256, 256, 2500)
	# execLSTM(256, 256, 5000)
	# execLSTM(512, 1, 25)
	# execLSTM(512, 1, 100)
	# execLSTM(512, 1, 250)
	# execLSTM(512, 1, 1000)
	# execLSTM(512, 1, 2500)
	# execLSTM(512, 1, 5000)
	# execLSTM(512, 2, 25)
	# execLSTM(512, 2, 100)
	# execLSTM(512, 2, 250)
	# execLSTM(512, 2, 1000)
	# execLSTM(512, 2, 2500)
	# execLSTM(512, 2, 5000)
	# execLSTM(512, 4, 25)
	# execLSTM(512, 4, 100)
	# execLSTM(512, 4, 250)
	# execLSTM(512, 4, 1000)
	# execLSTM(512, 4, 2500)
	# execLSTM(512, 4, 5000)
	# execLSTM(512, 16, 25)
	# execLSTM(512, 16, 100)
	# execLSTM(512, 16, 250)
	# execLSTM(512, 16, 1000)
	# execLSTM(512, 16, 2500)
	# execLSTM(512, 16, 5000)
	# execLSTM(512, 32, 25)
	# execLSTM(512, 32, 100)
	# execLSTM(512, 32, 250)
	# execLSTM(512, 32, 1000)
	# execLSTM(512, 32, 2500)
	# execLSTM(512, 32, 5000)
	# execLSTM(512, 64, 25)
	# execLSTM(512, 64, 100)
	# execLSTM(512, 64, 250)
	# execLSTM(512, 64, 1000)
	# execLSTM(512, 64, 2500)
	# execLSTM(512, 64, 5000)
	# execLSTM(512, 128, 25)
	# execLSTM(512, 128, 100)
	# execLSTM(512, 128, 250)
	# execLSTM(512, 128, 1000)
	# execLSTM(512, 128, 2500)
	# execLSTM(512, 128, 5000)
	# execLSTM(512, 256, 25)
	# execLSTM(512, 256, 100)
	# execLSTM(512, 256, 250)
	# execLSTM(512, 256, 1000)
	# execLSTM(512, 256, 2500)
	# # execLSTM(512, 256, 5000)
	# execLSTM(1024, 1, 25)
	# execLSTM(1024, 1, 100)
	# execLSTM(1024, 1, 250)
	# execLSTM(1024, 1, 1000)
	# execLSTM(1024, 1, 2500)
	# # execLSTM(1024, 1, 5000)
	# execLSTM(1024, 2, 25)
	# execLSTM(1024, 2, 100)
	# execLSTM(1024, 2, 250)
	# execLSTM(1024, 2, 1000)
	# execLSTM(1024, 2, 2500)
	# # execLSTM(1024, 2, 5000)
	# execLSTM(1024, 4, 25)
	# execLSTM(1024, 4, 100)
	# execLSTM(1024, 4, 250)
	# execLSTM(1024, 4, 1000)
	# execLSTM(1024, 4, 2500)
	# # execLSTM(1024, 4, 5000)
	# execLSTM(1024, 16, 25)
	# execLSTM(1024, 16, 100)
	# execLSTM(1024, 16, 250)
	# execLSTM(1024, 16, 1000)
	# execLSTM(1024, 16, 2500)
	# # execLSTM(1024, 16, 5000)
	# execLSTM(1024, 32, 25)
	# execLSTM(1024, 32, 100)
	# execLSTM(1024, 32, 250)
	# execLSTM(1024, 32, 1000)
	# execLSTM(1024, 32, 2500)
	# # execLSTM(1024, 32, 5000)
	# execLSTM(1024, 64, 25)
	# execLSTM(1024, 64, 100)
	# execLSTM(1024, 64, 250)
	# execLSTM(1024, 64, 1000)
	# execLSTM(1024, 64, 2500)
	# # execLSTM(1024, 64, 5000)
	# execLSTM(1024, 128, 25)
	# execLSTM(1024, 128, 100)
	# execLSTM(1024, 128, 250)
	# execLSTM(1024, 128, 1000)



config = ConfigProto()
config.gpu_options.allow_growth = True
session = InteractiveSession(config=config)
tf.keras.backend.set_floatx('float16')

# print("hidden,batch_size,timesteps,microseconds")
with tf.device('/gpu:0'):
	print("\n\n\n")
	# print("===================CUDNNLSTM=================")
	# allCudnnLSTM()
	print()
	print()
	print("===================LSTM=================")

	allLSTM_nice()

csvfile.close()