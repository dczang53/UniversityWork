NAME: Dennis Zang
EMAIL: dennisczang@gmail.com
ID: 704766877

Ths files included in this project are:
lab0.c
Makefile
backtrace.png
breakpoint.png

lab0.c:
The C program (should) follow the specs of the project, and uses the getopt_long()
API to retrieve the long arguments for input and output. Most of the information
for using this API came from the official GNU website
(https://www.gnu.org/software/libc/manual/html_node/Getopt.html#Getopt). Other than
this, the only other online sites I used are for knowing how to use basic utilities, 
system calls, and functions (like open(2) and exit(3)) and their man pages. The program
works by first using getopt_long() to get the long arguments, setting flags in the process,
then finally performing the segmentation fault or I/O (in that order if their respective flags
are set).

Makefile:
The Makefile includes the means to compile the C program, perform smoke tests on the executable, 
, tar the files for submission, and clean up the executables if needed. What each option does
can be found below.
(make): Simply compiles the C program into the executable "lab0" with the -Wall and
-Wextra options with gcc.
(make check): Performs smoke tests to make the sure the program is correct. Tests test for:
      -(STDIN to STDOUT) tests for exit code 0 and correct copy
      -(faulty option) tests for exit code 1
      -(--input to STDOUT) tests for exit code 0 and correct copy
      -(STDIN to --output) tests for exit code 0 and correct copy
      -(--input to --output) tests for exit code 0 and correct copy
      -(fault input) tests for exit code 2 (by referencing a nonexisting file [empty name])
      -(faulty output) tests for exit code 3 (by creating an unreadable file)
      -(--segfault option) tests for exit code 139 (the exit code for SIGSEGV)
      -(--catch with --segfault) tests for exit code 4
(make dist): Simply builds the distributed tarball using the tar command.
(make clean): Simply removes the executable "lab0" using the rm command

*.png files:
As given by the spec, backtrace.png shows a backtrace after the segmentation fault has occured
and breakpoint.png confirms that the pointer being written to is null.